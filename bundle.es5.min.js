(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Bingo = function () {
  function Bingo(size) {
    _classCallCheck(this, Bingo);

    this.size = size || 5;
    this.cells = range(this.size * this.size).map(function (i) {
      return new Cell({ number: i });
    });
    this.range = range(this.size);
    this.reverseRange = range(this.size).reverse();
    this.chanceCount = 0;
  }

  // [{number, color}, ...]


  _createClass(Bingo, [{
    key: 'assign',
    value: function assign(values) {
      var _this = this;

      values.forEach(function (v, i) {
        _this.cells[i].update(v);
      });
    }

    // {number, color}

  }, {
    key: 'update',
    value: function update(value) {
      var cell = this.cells.find(function (c) {
        return c.number === value.number;
      });
      if (cell) {
        cell.update(value);
      }
    }
  }, {
    key: 'at',
    value: function at(x, y) {
      return this.cells[y * this.size + x];
    }

    // CHANCE ランプを光らせる

  }, {
    key: 'doChance',
    value: function doChance() {
      if (this.chanceCount < 3) this.chanceCount += 1;
    }
  }, {
    key: 'mustChance',
    value: function mustChance() {
      return this.chanceCount < 2 || this.isReached();
    }

    // リーチがひとつでもある

  }, {
    key: 'isReached',
    value: function isReached() {
      return this.sequences().some(function (cells) {
        return cells.filter(function (c) {
          return c.isOpened;
        }).length >= 4;
      });
    }

    // たてよこななめ

  }, {
    key: 'sequences',
    value: function sequences() {
      var _this2 = this;

      var all = [];
      // たて
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        var _loop = function _loop() {
          var x = _step.value;

          all.push(_this2.range.map(function (y) {
            return _this2.at(x, y);
          }));
        };

        for (var _iterator = this.range[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          _loop();
        }
        // よこ
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        var _loop2 = function _loop2() {
          var y = _step2.value;

          all.push(_this2.range.map(function (x) {
            return _this2.at(x, y);
          }));
        };

        for (var _iterator2 = this.range[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          _loop2();
        }
        // ななめ
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      all.push(zip(this.range, this.range).map(function (xy) {
        return _this2.at(xy[0], xy[1]);
      }));
      all.push(zip(this.range, this.reverseRange).map(function (xy) {
        return _this2.at(xy[0], xy[1]);
      }));

      return all;
    }
  }]);

  return Bingo;
}();

module.exports = Bingo;

var Cell = function () {
  function Cell(x) {
    _classCallCheck(this, Cell);

    this.update(x);
  }

  _createClass(Cell, [{
    key: 'update',
    value: function update(x) {
      if (x.number !== undefined) this.number = x.number;
      if (x.color !== undefined) this.color = x.color;
      if (x.opened_type !== undefined) this.openedType = x.opened_type;
      if (x.can_open !== undefined) this.canOpen = x.can_open !== 0;
    }
  }, {
    key: 'isOpened',
    get: function get() {
      return this.openedType !== undefined;
    }
  }]);

  return Cell;
}();

function range(lo, hi) {
  if (hi === undefined) {
    hi = lo;
    lo = 0;
  }
  if (hi < lo) return undefined;
  var a = new Array(hi - lo);
  for (var i = 0; i < a.length; ++i) {
    a[i] = lo + i;
  }
  return a;
}

function zip(xs, ys) {
  var len = Math.max(xs.length, ys.length);
  return range(len).map(function (i) {
    return [xs[i], ys[i]];
  });
}

},{}],2:[function(require,module,exports){
'use strict';

// gbf.mbga.jp では console.log が潰されている

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

if (console.log.toString().indexOf('native code') < 0) {
  console.log = Object.getPrototypeOf(console).log;
}
window.onerror = null;

var onAjaxSuccess = require('./on-ajax-success');
var Bingo = require('./bingo');
var lastHit = require('./last-hit');

waitJQuery(main);
function main() {
  console.log('main', jQuery);
  onAjaxSuccess(function (board) {
    return console.log('onAjaxSuccess', board);
  });

  // ビンゴをする
  var bingo = new Bingo();
  window.bingo = bingo;
  onAjaxSuccess(function (board) {
    return playBingo(bingo, board);
  });

  // 再プレイボタンを押し続ける
  setInterval(function () {
    return jQuery('.btn-play-again').trigger('tap');
  }, 2211);

  // ベット額を決めるダイアログの Play ボタンを押し続ける
  //setInterval(() => jQuery('.btn-play-ok').trigger('tap'), 2121);
}

function playBingo(bingo, board) {
  // 盤面にある数字
  if (board.sheet_list) {
    bingo.assign(board.sheet_list);
  }
  // 転がってきた数字
  if (board.hit_list) {
    for (var i in board.hit_list) {
      bingo.update(board.hit_list[i]);
    }
  }
  // チャンスの状態
  if (board.chance_data) {
    bingo.chanceCount = board.chance_data.gauge_level;
  }

  // チャンスしたほうが良ければする
  if (!bingo.mustChance()) return;
  var hit = lastHit(board.hit_list);
  if (!hit) return;
  // 押せるようになるまで数秒かかるので何度か押す
  for (var t = 500; t <= 4000; t += 500) {
    setTimeout(function () {
      return tap(hit.number);
    }, t);
  }
}

function waitJQuery(f) {
  setTimeout(function () {
    if ((typeof jQuery === 'undefined' ? 'undefined' : _typeof(jQuery)) === undefined) return wait(f);
    f();
  }, 100);
}

// 数字がnであるマスを叩く
function tap(n) {
  jQuery('[data-number=\'' + n + '\']').trigger('tap');
}

/*
  div.cnt-bingo
   div.prt-sheet-area
    div.panel-(0-24)
     &.opened
      div[data-number=x]
*/

},{"./bingo":1,"./last-hit":3,"./on-ajax-success":4}],3:[function(require,module,exports){
'use strict';

module.exports = function lastHit(hits) {
  if (!hits) return null;
  return hits[Math.min.apply(Math, Object.keys(hits).map(Number))];
};

},{}],4:[function(require,module,exports){
'use strict';

var lastHit = require('./last-hit');

// ビンゴのデータを受け取った時になにかする
module.exports = function (callback) {
  jQuery(document).ajaxSuccess(function (event, xhr, settings) {
    if (settings.url.indexOf('/bingo_init_data/') < 0) return;
    callback(xhr.responseJSON);
  });
};

// いろつけて表示
module.exports.log = function (game) {
  var lines = [''];
  var styles = [];
  // let chance = game.chance_data;
  // lines.push(`chance ${chance.number}, ${chance.gauge_level}`);
  var sheet = game.sheet_list;
  if (!sheet) return;
  for (var y = 0; y < 5; ++y) {
    var texts = [];
    for (var x = 0; x < 5; ++x) {
      var i = y * 5 + x;
      var p = sheet[i];
      texts.push('%c' + (p.number < 10 ? ' ' : '') + p.number);
      var style = '';

      if (p.opened_type) {
        style = 'color: blue; background: white';
      } else if ((lastHit(game.hit_list) || {}).number === p.number) {
        style = 'color: red; background: white';
      }
      styles.push(style);
    }
    lines.push(texts.join(' '));
  }
  var args = [].concat([lines.join('\n')], styles);
  console.debug.apply(console, args);
};

},{"./last-hit":3}]},{},[2]);
